└──Funcs
    ├──FuncDecl
    │   ├──ID: main
    │   ├──Type: int
    │   ├──Formals
    │   └──Statements
    │       ├──VarDecl
    │       │   ├──ID: x
    │       │   ├──Type: int
    │       │   └──Num: 10
    │       ├──VarDecl
    │       │   ├──ID: b
    │       │   ├──Type: byte
    │       │   └──NumB: 1010
    │       ├──VarDecl
    │       │   ├──ID: y
    │       │   └──Type: int
    │       ├──Assign
    │       │   ├──ID: y
    │       │   └──BinOp: +
    │       │       ├──ID: x
    │       │       └──Num: 5
    │       ├──VarDecl
    │       │   ├──ID: z
    │       │   ├──Type: byte
    │       │   └──Cast
    │       │       ├──BinOp: *
    │       │       │   ├──ID: x
    │       │       │   └──Num: 2
    │       │       └──Type: byte
    │       ├──If
    │       │   ├──RelOp: >
    │       │   │   ├──ID: y
    │       │   │   └──Num: 15
    │       │   ├──Statements
    │       │   │   └──Assign
    │       │   │       ├──ID: x
    │       │   │       └──BinOp: +
    │       │   │           ├──ID: x
    │       │   │           └──Num: 1
    │       │   └──Statements
    │       │       └──Assign
    │       │           ├──ID: x
    │       │           └──BinOp: -
    │       │               ├──ID: x
    │       │               └──Num: 1
    │       ├──If
    │       │   ├──ID: flag
    │       │   └──Statements
    │       │       └──If
    │       │           ├──RelOp: ==
    │       │           │   ├──ID: x
    │       │           │   └──Num: 0
    │       │           ├──Statements
    │       │           │   └──Assign
    │       │           │       ├──ID: y
    │       │           │       └──Num: 1
    │       │           └──Statements
    │       │               └──Assign
    │       │                   ├──ID: y
    │       │                   └──Num: 2
    │       ├──If
    │       │   ├──ID: flag
    │       │   └──Statements
    │       │       └──If
    │       │           ├──RelOp: ==
    │       │           │   ├──ID: x
    │       │           │   └──Num: 0
    │       │           ├──Assign
    │       │           │   ├──ID: y
    │       │           │   └──Num: 1
    │       │           └──Assign
    │       │               ├──ID: y
    │       │               └──Num: 2
    │       ├──If
    │       │   ├──ID: flag
    │       │   └──Statements
    │       │       └──If
    │       │           ├──RelOp: ==
    │       │           │   ├──ID: x
    │       │           │   └──Num: 0
    │       │           ├──Statements
    │       │           │   ├──Assign
    │       │           │   │   ├──ID: y
    │       │           │   │   └──Num: 1
    │       │           │   └──If
    │       │           │       ├──RelOp: >=
    │       │           │       │   ├──ID: y
    │       │           │       │   └──Num: 1
    │       │           │       ├──Call
    │       │           │       │   ├──ID: print
    │       │           │       │   └──ExpList
    │       │           │       │       └──String: bigger
    │       │           │       └──Call
    │       │           │           ├──ID: print
    │       │           │           └──ExpList
    │       │           │               └──String: smaller
    │       │           └──Assign
    │       │               ├──ID: y
    │       │               └──Num: 2
    │       ├──While
    │       │   ├──RelOp: >
    │       │   │   ├──ID: x
    │       │   │   └──Num: 0
    │       │   └──Statements
    │       │       ├──Assign
    │       │       │   ├──ID: x
    │       │       │   └──BinOp: -
    │       │       │       ├──ID: x
    │       │       │       └──Num: 1
    │       │       ├──If
    │       │       │   ├──RelOp: ==
    │       │       │   │   ├──ID: x
    │       │       │   │   └──Num: 5
    │       │       │   └──Statements
    │       │       │       └──Break
    │       │       └──Continue
    │       ├──Call
    │       │   ├──ID: printResult
    │       │   └──ExpList
    │       │       ├──ID: y
    │       │       └──ID: x
    │       ├──VarDecl
    │       │   ├──ID: sum
    │       │   ├──Type: int
    │       │   └──Call
    │       │       ├──ID: add
    │       │       └──ExpList
    │       │           ├──ID: y
    │       │           └──ID: x
    │       └──Return
    │           └──ID: sum
    ├──FuncDecl
    │   ├──ID: add
    │   ├──Type: int
    │   ├──Formals
    │   │   ├──Formal
    │   │   │   ├──ID: b
    │   │   │   └──Type: int
    │   │   └──Formal
    │   │       ├──ID: a
    │   │       └──Type: int
    │   └──Statements
    │       └──Return
    │           └──BinOp: +
    │               ├──ID: a
    │               └──ID: b
    ├──FuncDecl
    │   ├──ID: multiply
    │   ├──Type: byte
    │   ├──Formals
    │   │   ├──Formal
    │   │   │   ├──ID: b
    │   │   │   └──Type: byte
    │   │   └──Formal
    │   │       ├──ID: a
    │   │       └──Type: byte
    │   └──Statements
    │       └──Return
    │           └──BinOp: *
    │               ├──ID: a
    │               └──ID: b
    ├──FuncDecl
    │   ├──ID: isGreater
    │   ├──Type: bool
    │   ├──Formals
    │   │   ├──Formal
    │   │   │   ├──ID: b
    │   │   │   └──Type: int
    │   │   └──Formal
    │   │       ├──ID: a
    │   │       └──Type: int
    │   └──Statements
    │       └──Return
    │           └──RelOp: >
    │               ├──ID: a
    │               └──ID: b
    ├──FuncDecl
    │   ├──ID: printResult
    │   ├──Type: void
    │   ├──Formals
    │   │   ├──Formal
    │   │   │   ├──ID: b
    │   │   │   └──Type: int
    │   │   └──Formal
    │   │       ├──ID: a
    │   │       └──Type: int
    │   └──Statements
    │       ├──Call
    │       │   ├──ID: print
    │       │   └──ExpList
    │       │       └──String: The result is:
    │       └──Call
    │           ├──ID: print
    │           └──ExpList
    │               └──BinOp: +
    │                   ├──ID: a
    │                   └──ID: b
    ├──FuncDecl
    │   ├──ID: castExample
    │   ├──Type: int
    │   ├──Formals
    │   └──Statements
    │       ├──VarDecl
    │       │   ├──ID: b
    │       │   ├──Type: byte
    │       │   └──NumB: 11110
    │       └──Return
    │           └──Cast
    │               ├──ID: b
    │               └──Type: int
    ├──FuncDecl
    │   ├──ID: logicalOperations
    │   ├──Type: bool
    │   ├──Formals
    │   └──Statements
    │       ├──VarDecl
    │       │   ├──ID: a
    │       │   ├──Type: int
    │       │   └──Num: 10
    │       ├──VarDecl
    │       │   ├──ID: b
    │       │   ├──Type: int
    │       │   └──Num: 20
    │       └──Return
    │           └──And
    │               ├──RelOp: <
    │               │   ├──ID: a
    │               │   └──ID: b
    │               └──Not
    │                   └──RelOp: ==
    │                       ├──ID: a
    │                       └──ID: b
    ├──FuncDecl
    │   ├──ID: complexExpressions
    │   ├──Type: int
    │   ├──Formals
    │   └──Statements
    │       ├──VarDecl
    │       │   ├──ID: a
    │       │   ├──Type: int
    │       │   └──Num: 5
    │       ├──VarDecl
    │       │   ├──ID: b
    │       │   ├──Type: int
    │       │   └──BinOp: *
    │       │       ├──Cast
    │       │       │   ├──BinOp: +
    │       │       │   │   ├──ID: a
    │       │       │   │   └──Num: 10
    │       │       │   └──Type: int
    │       │       └──BinOp: -
    │       │           ├──ID: a
    │       │           └──Num: 1
    │       └──Return
    │           └──ID: b
    ├──FuncDecl
    │   ├──ID: nestedLoops
    │   ├──Type: void
    │   ├──Formals
    │   └──Statements
    │       ├──VarDecl
    │       │   ├──ID: i
    │       │   ├──Type: int
    │       │   └──Num: 0
    │       ├──VarDecl
    │       │   ├──ID: j
    │       │   ├──Type: int
    │       │   └──Num: 0
    │       └──While
    │           ├──RelOp: <
    │           │   ├──ID: i
    │           │   └──Num: 10
    │           └──Statements
    │               ├──While
    │               │   ├──RelOp: <
    │               │   │   ├──ID: j
    │               │   │   └──Num: 5
    │               │   └──Statements
    │               │       ├──Call
    │               │       │   ├──ID: print
    │               │       │   └──ExpList
    │               │       │       └──BinOp: *
    │               │       │           ├──ID: i
    │               │       │           └──ID: j
    │               │       └──Assign
    │               │           ├──ID: j
    │               │           └──BinOp: +
    │               │               ├──ID: j
    │               │               └──Num: 1
    │               ├──Assign
    │               │   ├──ID: j
    │               │   └──Num: 0
    │               └──Assign
    │                   ├──ID: i
    │                   └──BinOp: +
    │                       ├──ID: i
    │                       └──Num: 1
    ├──FuncDecl
    │   ├──ID: testBooleans
    │   ├──Type: void
    │   ├──Formals
    │   └──Statements
    │       ├──VarDecl
    │       │   ├──ID: a
    │       │   ├──Type: bool
    │       │   └──Bool: true
    │       ├──VarDecl
    │       │   ├──ID: b
    │       │   ├──Type: bool
    │       │   └──Bool: false
    │       └──If
    │           ├──Or
    │           │   ├──ID: a
    │           │   └──ID: b
    │           ├──Statements
    │           │   └──Call
    │           │       ├──ID: print
    │           │       └──ExpList
    │           │           └──String: At least one is true
    │           └──Statements
    │               └──Call
    │                   ├──ID: print
    │                   └──ExpList
    │                       └──String: Both are false
    └──FuncDecl
        ├──ID: doNothing
        ├──Type: void
        ├──Formals
        └──Statements
            └──Return
